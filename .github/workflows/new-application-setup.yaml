on:
  push:
    paths:
       - 'applications/**/README.md'
    branches:
      - '*' # Any branch except main
      - '!main'

permissions:
  contents: write
  id-token: write

jobs:
  discover-new-application:
    runs-on: 'ubuntu-latest'
    outputs:
      new_application: ${{ steps.get-application.outputs.new_application }}

    steps:
      - name: Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Discover New Application
        id: get-application
        run: |
          git config --global --add safe.directory $(realpath .)
          echo "Checking for new application with README.md"

          NEW_APPLICATION=$(git diff --name-only --diff-filter=A HEAD~1 HEAD | grep "^applications/[^/]*\/README.md$" || true)
          if [[ -n "$NEW_APPLICATION" ]]; then
            NEW_APPLICATION_COUNT=$(echo "$NEW_APPLICATION" | wc -l)
            if [[ $NEW_APPLICATION_COUNT -eq 1 ]]; then
              # drop README.md
              NEW_APPLICATION=$(echo "$NEW_APPLICATION" | cut -d '/' -f -2)
              echo "Found new application: $NEW_APPLICATION"
              echo "new_application=$NEW_APPLICATION" > "$GITHUB_OUTPUT"
            else
              echo "Error: Found $NEW_APPLICATION_COUNT applications with README.md, expected only one."
            fi
          else
            echo "No new application found with README.md."
          fi

  new-application-setup:
    runs-on: 'ubuntu-latest'
    needs: discover-new-application
    if: needs.discover-new-application.outputs.new_application

    steps:
    - name: Clone
      uses: actions/checkoutav4
      with:
        fetch-depth: 0

    - name: Install tanka and jsonnet-bundler
      run: |
        # tanka
        curl -Lo /usr/local/bin/tk https://github.com/grafana/tanka/releases/latest/download/tk-linux-amd64
        chmod a+x /usr/local/bin/tk
        # jsonnet-bundler
        curl -Lo /us/local/bin/jb https://github.com/jsonnet-bundler/jsonnet-bundler/releases/latest/download/jb-linux-amd64
        chmod a+x /usr/local/bin/jb

    - name: Checkout acme/common-libsonnet
      uses: actions/checkout@v4
      with:
        repository: acme/common-libsonnet
        ref: main
        path: common-libsonnet
        token: ${{ secrets.ACME_BOT_GH_TOKEN }}

    - name: Create Boilerplate
      run: |
        new_application="${{ needs.discover-new-application.outputs.new_application }}"
        echo "New application path: " $new_application
        # extract just the application name under applications/
        application=$(echo "$new_application" | cut -d '/' -f 2-)
        echo "Creating new application setup for $application"
        $GITHUB_WORKSPACE/.github/scripts/new-application.sh $application
        # for now just create the development environment
        echo "Create development libsonnet environment"
        $GITHUB_WORKSPACE/.github/scripts/new-environment.sh $application development
        echo "$application DONE"
        echo

    - name: Commit changes
      run: |
        new_application="${{ needs.discover-new-application.outputs.new_application }}"
        echo "Pushing new application setup to git"
        git config -global user.email 'github_svc@acme.com'
        git config â€”global user. name 'acme-bot'

        # Other GHA tasks are running in parallel and we need to pull before pushing.
        git pull

        git add $new_application
        git commit -m "Automated creation of boilerplate for new application: $new_application"
        git push
